---
import Layout from "../layouts/Layout.astro";
import modelsData from "../../public/models.json";

const allModels = modelsData.models;
---

<Layout
  title="Explore AI Assistants | FennaAI"
  description="Discover and search our curated library of over 100 open-source AI models ready to run on your machine."
>
  <div class="models-page">
    <header class="page-header">
      <h1>Explore Our AI Assistants</h1>
      <p>
        Discover a curated library of powerful, open-source assistants. Find the
        perfect one for your needs, from speedy chat assistants to advanced
        ones.
      </p>
      <div class="search-wrapper">
        <input
          type="search"
          id="modelSearch"
          placeholder="Search models by name, creator, or tag..."
        />
      </div>
    </header>

    <main class="models-grid">
      {
        allModels.map((model) => (
          <div
            class="model-card"
            data-search-content={`${model.displayName} ${model.creator} ${model.what_it_does.nutshell} ${model.tags.join(" ")}`.toLowerCase()}
          >
            <div class="card-header">
              <span class="popularity-label">{model.popularity_label}</span>
              <span class="size-label">
                {model.the_download.size_gb.toFixed(2)} GB
              </span>
            </div>
            <div class="card-body">
              <h2 class="model-name">{model.displayName}</h2>
              <p class="creator">by {model.creator}</p>
              <p class="description">{model.what_it_does.nutshell}</p>
            </div>
            <div class="card-footer">
              <div class="tags">
                {model.tags.map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            </div>
          </div>
        ))
      }
    </main>
  </div>
</Layout>

<style>
  .models-page {
    max-width: 80rem;
    margin: 0 auto;
    padding: 1rem;
  }

  .page-header {
    text-align: center;
    padding: 4rem 0;
  }

  .page-header h1 {
    font-size: 2.5rem;
    font-weight: 800;
    margin-bottom: 1rem;
  }

  .page-header p {
    font-size: 1.125rem;
    color: var(--gray-11);
    max-width: 48rem;
    margin: 0 auto;
  }

  .search-wrapper {
    margin-top: 2rem;
  }

  #modelSearch {
    width: 100%;
    max-width: 40rem;
    padding: 0.75rem 1.25rem;
    font-size: 1rem;
    border-radius: 9999px;
    border: 2px solid var(--pink-6);
    background-color: var(--gray-3);
    color: var(--text-color);
    transition:
      border-color 0.2s,
      box-shadow 0.2s;
  }

  #modelSearch:focus {
    outline: none;
    border-color: var(--pink-11);
    box-shadow: 0 0 0 3px rgba(236, 72, 153, 0.3);
  }

  .models-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .model-card {
    display: flex;
    flex-direction: column;
    background-color: var(--gray-3);
    border: 1px solid var(--gray-6);
    border-radius: 1rem;
    padding: 1.5rem;
    transition:
      transform 0.2s ease-out,
      box-shadow 0.2s ease-out;
    height: 100%; /* Ensure cards in a row are same height */
  }

  .model-card:hover {
    transform: translateY(-5px);
    box-shadow:
      0 10px 15px -3px rgba(0, 0, 0, 0.05),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--gray-12);
  }

  .popularity-label {
    font-weight: 600;
    color: var(--pink-12);
  }

  .card-body {
    flex-grow: 1; /* Pushes footer to the bottom */
  }

  .model-name {
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: 0.25rem;
  }

  .creator {
    color: var(--gray-11);
    margin-bottom: 1rem;
  }

  .description {
    color: var(--gray-11);
    line-height: 1.6;
  }

  .card-footer {
    margin-top: 1.5rem;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background-color: var(--pink-6);
    color: var(--subtle-text-color);
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const searchInput = document.getElementById("modelSearch");
    const modelCards = document.querySelectorAll(".model-card");

    if (!searchInput) return;

    searchInput.addEventListener("input", (e) => {
      const searchTerm = e.target.value.toLowerCase().trim();

      modelCards.forEach((card) => {
        const cardContent = card.dataset.searchContent;

        if (cardContent.includes(searchTerm)) {
          card.style.display = "flex";
        } else {
          card.style.display = "none";
        }
      });
    });
  });
</script>
