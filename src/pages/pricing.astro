---
import Layout from "../layouts/Layout.astro";
import PricingCard from "../components/PricingCard.astro";
import FaqItem from "../components/FaqItem.astro";
---

<Layout
  title="Pricing | FennaAI"
  description="Simple pricing for training your AI with FennaAI."
>
  <div class="pricing-page">
    <header class="page-header" data-animate-on-scroll>
      <h1>Simple Pricing for Training Your AI</h1>
      <p>
        Chatting with your AI and downloading AI Assistants is completely free.
        You only pay when you want to <strong>train your AI Assistants</strong> with
        your own data. No subscriptions. No hidden fees. Credits never expire.
      </p>
    </header>

    <section class="pricing-grid">
      <PricingCard
        plan="Spark Pack"
        price="$5"
        description="Perfect for your first one or two training sessions."
        features={[
          "5 Credits",
          "Train 1-2 basic AI assistants",
          "Community Support",
        ]}
        delay={100}
      />
      <PricingCard
        plan="Booster Pack"
        price="$10"
        description="For regular use and more complex training projects."
        features={[
          "10 Credits",
          "train multiple assistants",
          "Priority Support",
        ]}
        highlighted={true}
        badge="Most Popular"
        delay={200}
      />
      <PricingCard
        plan="Supercharge Pack"
        price="$50"
        description="For power users who need to train on larger datasets."
        features={[
          "50 Credits",
          "Train large-scale assistants",
          "Dedicated Support",
        ]}
        delay={300}
      />
      <PricingCard
        plan="Enterprise"
        price="Custom"
        description="Custom solutions for teams and organizations."
        features={[
          "Volume discounts on credits",
          "Dedicated infrastructure",
          "Team management",
          "Custom integrations",
        ]}
        buttonText="Contact Sales"
        delay={400}
      />
    </section>

    <section class="faq-section" data-animate-on-scroll>
      <h2>Frequently Asked Questions</h2>

      <FaqItem question="What are credits used for?">
        <p>
          Credits are <strong>only used for training</strong> your AI assistants.
          Chatting, browsing assistants, and uploading files are completely free
          and do not use credits.
        </p>
      </FaqItem>

      <FaqItem question="Do my credits expire?">
        <p>
          Never. Your credits stay in your account until you use them — no time
          limits.
        </p>
      </FaqItem>

      <FaqItem question="What if I just want to chat with my AI?">
        <p>
          That’s 100% free. You only need credits if you want to teach your AI
          something new or train it with your personal or business data.
        </p>
      </FaqItem>
    </section>
  </div>
</Layout>

<style>
  .pricing-page {
    max-width: 80rem;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .page-header {
    text-align: center;
    padding: 4rem 0;
  }

  .page-header h1 {
    font-size: 2.5rem;
    font-weight: 800;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .page-header p {
    font-size: 1.25rem;
    color: #4b5563;
    max-width: 42rem;
    margin: 0 auto;
  }

  @media (min-width: 1024px) {
    .page-header h1 {
      font-size: 3rem;
    }
  }

  .pricing-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    padding: 3rem 0;
  }

  @media (min-width: 768px) {
    .pricing-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .pricing-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  .faq-section {
    max-width: 56rem;
    margin: 4rem auto;
  }

  .faq-section h2 {
    font-size: 1.875rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 2rem;
  }

  @media (prefers-color-scheme: dark) {
    .page-header p {
      color: #d1d5db;
    }
  }

  [data-animate-on-scroll] {
    opacity: 0;
    transform: translateY(40px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
  }

  [data-animate-on-scroll].is-visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const animatedElements = document.querySelectorAll(
      "[data-animate-on-scroll]"
    );
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("is-visible");
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 }
    );

    animatedElements.forEach((el) => observer.observe(el));
  });
</script>
